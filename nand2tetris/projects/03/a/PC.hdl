// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=true,sel[2]=reset,sel[1]=load,sel[0]=inc,a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
	Not16(in=true,out=oute,out=outf,out=outg,out=outh);
	Mux16(a=in,b=in,sel=c,out=outd,out=outc);
	Add16(a=gate,b[0]=b,out=outa,out=outb);
	Mux8Way16(a=outa,b=outb,c=outc,d=outd,e=oute,f=outf,g=outg,h=outh,sel[2]=reset,sel[1]=load,sel[0]=inc,out=out1);
	Register(in=out1,load=true,out=out,out=gate);
}
